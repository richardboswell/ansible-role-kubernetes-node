---
- name: test for kubernetes installed
  command: rpm -q kubernetes
  register: kubernetes_installed
  ignore_errors: yes
  changed_when: False
  tags:
    - packages

- name: test for flannel installed
  command: rpm -q flannel
  register: flannel_installed
  ignore_errors: yes
  changed_when: False
  tags:
    - packages

- name: install kubernetes
  yum:  name={{ kubernetes_package }} state=present
  when: kubernetes_installed.rc == 1
  tags:
    - packages

- name: install flannel
  yum:  name={{ flannel_package }} state=present
  when: flannel_installed.rc == 1
  tags:
    - packages

- name: Set up configs
  template:
    src: "{{ item }}.j2"
    dest: "{{ kube_config_dir }}/{{ item }}"
    owner: root
    group: root
    mode: 0644
  with_items:
    - config
    - kubelet
  notify:
    - restart kubelet
    - restart kube-proxy

- name: Set up services
  template:
    src: "{{ item.src }}"
    dest: "{{ item.dest }}"
    owner: root
    group: root
    mode: 0644
  with_items:
    - src: flannel.service.j2
      dest: /etc/systemd/system/flannel.service
  notify:
    - daemon reload
    - restart flannel

- name: add flannel bridge to docker
  lineinfile:
    dest: "{{ docker_service_unit }}"
    regexp: '^EnvironmentFile=/run/flannel/subnet.env'
    line: 'EnvironmentFile=/run/flannel/subnet.env'
    state: present
  notify:
    - daemon reload
    - restart docker

- name: turn off docker bridge
  lineinfile:
    dest: "{{ docker_service_unit }}"
    regexp: '^ExecStartPre=-/sbin/ip link set dev docker0 down'
    line: 'ExecStartPre=-/sbin/ip link set dev docker0 down'
    state: present
  notify:
    - daemon reload
    - restart docker

- name: remove docker bridge
  lineinfile:
    dest: "{{ docker_service_unit }}"
    regexp: '^ExecStartPre=-/usr/sbin/brctl delbr docker0'
    line: 'ExecStartPre=-/usr/sbin/brctl delbr docker0'
    state: present
  notify:
    - daemon reload
    - restart docker

- name: add consul dns to docker
  lineinfile:
    dest: "{{ docker_service_unit }}"
    # starts normal, keep non leading dash things, keep -x word things, strip out --mtu or --bip=\S. things
    regexp: '^ExecStart=/bin/docker (([^-]*(-(?!(?:-mtu|-bip)=\S+).)+[^-]*)*)\n$'
    line: 'ExecStart=/bin/docker \1 --bip=${FLANNEL_SUBNET} --mtu=${FLANNEL_MTU}'
    backrefs: yes
    state: present
  notify:
    - reload systemd
    - restart docker


- name: initial start services
  service: name={{ item }} enabled=yes state=started
  with_items:
    - flannel
    - docker
    - kubelet
    - kube-proxy
